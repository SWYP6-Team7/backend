spring:
  profiles:
    include:
      - credentials
      - s3
      - test
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:test;mode=mysql
    username: sa
    password:
  sql:
    init:
      data-locations: classpath:data.sql
      mode: never
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  slack:
    webhook: ""

  mail:
    host: localhost
    port: 3025
    username: test-user
    password: test-password
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false

  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientAutoConfiguration
      - org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: fake-client-id
            client-secret: fake-client-secret
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            authorization-grant-type: authorization_code
            scope: profile, account_email
            client-name: Kakao
            provider: kakao
          naver:
            client-id: fake-client-id
            client-secret: fake-client-secret
            redirect-uri: "{baseUrl}/login/oauth2/code/naver"
            authorization-grant-type: authorization_code
            scope: name, email
            client-name: Naver
            provider: Naver
          google:
            client-id: dummy-client-id
            client-secret: dummy-client-secret
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            authorization-grant-type: authorization_code
            scope: openid, profile, email
            client-name: Google
            provider: Google
      provider:
        kakao:
          authorization-uri: https://kauth.kakao.com/oauth/authorize
          token-uri: https://kauth.kakao.com/oauth/token
          user-info-uri: https://kapi.kakao.com/v2/user/me
          user-name-attribute: id
        naver:
          authorization-uri: https://nid.naver.com/oauth2.0/authorize
          token-uri: https://nid.naver.com/oauth2.0/token
          user-info-uri: https://openapi.naver.com/v1/nid/me
          user-name-attribute: response
        google:
          authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
          token-uri: https://oauth2.googleapis.com/token
          user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
          user-name-attribute: sub

  main:
    lazy-initialization: true

custom:
  admin-secret-key: your-secret-key
  jwt:
    secretKey: 4bE1Gq6/StHsrBXcOzc04rFQzUpENVYPay6c/Sl5H6M=
    expirationMs: 3600000 # 토큰 만료 시간 (1시간 = 3600000ms)
app:
  data-loader:
    enabled: false
management:
  health:
    redis:
      enabled: false

kakao:
  client-id: fake-client-id
  client-secret: fake-client-secret
  redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
  authorization-grant-type: authorization_code
  scope: profile, account_email
  client-name: Kakao
  provider: kakao
naver:
  client-id: fake-client-id
  client-secret: fake-client-secret
  redirect-uri: "{baseUrl}/login/oauth2/code/naver"
  authorization-grant-type: authorization_code
  scope: name, email
  client-name: Naver
  provider: Naver
google:
  client-id: dummy-client-id
  client-secret: dummy-client-secret
  redirect-uri: "{baseUrl}/login/oauth2/code/google"
  authorization-grant-type: authorization_code
  scope: openid, profile, email
  client-name: Google
  provider: Google

redis:
  host: localhost
  port: 6379
  
cloud:
  aws:
    s3:
      bucket: bucket-name
      base-folder: images/
    region:
      static: region
    stack:
      auto: false

server:
  servlet:
    encoding:
      force: true

moing:
  domain: https://localhost:8080