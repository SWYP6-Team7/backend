plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'swyp'
version = '0.0.2-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2' //JWT
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'org.springframework.security:spring-security-crypto' //Argon2
    implementation 'org.bouncycastle:bcprov-jdk15on:1.69'

    //actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'io.lettuce:lettuce-core:6.2.1.RELEASE'

    //S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.560'
    implementation 'com.amazonaws:aws-java-sdk-core:1.12.500'

    implementation("net.gpedro.integrations.slack:slack-webhook:1.4.0") // slack-webhook
    implementation 'ch.qos.logback:logback-classic:1.5.12'
    implementation 'ch.qos.logback:logback-core:1.5.12'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'


    // Email
    implementation 'com.mailgun:mailgun-java:1.1.3'
    implementation 'org.thymeleaf:thymeleaf:3.0.15.RELEASE'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:3.3.3"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

//Querydsl build option
def generated = 'src/main/generated'

//Querydsl QClass file location
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
    options.compilerArgs << "-parameters"
}

// java source set에 Querydsl QClass location 추가
sourceSets {
    main.java.srcDirs += [generated]
}

// gradle clean 시 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

//tasks.withType(JavaCompile) {
//    options.compilerArgs << "-parameters"
//}
